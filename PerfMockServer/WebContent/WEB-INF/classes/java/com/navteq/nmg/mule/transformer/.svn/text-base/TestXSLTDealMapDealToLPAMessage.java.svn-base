package com.navteq.nmg.mule.transformer;

//import com.reavely.util.TestXPathExp;
import java.io.IOException;
import java.io.InputStream;
import java.io.StringWriter;

import javax.xml.transform.Result;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerConfigurationException;
import javax.xml.transform.TransformerException;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.stream.StreamResult;
import javax.xml.transform.stream.StreamSource;

import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import org.mule.util.IOUtils;

/**
 *
 * @author sreavely
 */
public class TestXSLTDealMapDealToLPAMessage {

    public TestXSLTDealMapDealToLPAMessage() {
    }

    @BeforeClass
    public static void setUpClass() throws Exception {
    }

    @AfterClass
    public static void tearDownClass() throws Exception {
    }

    @Before
    public void setUp() {
    }

    @After
    public void tearDown() {
    }

    // TODO add test methods here.
    // The methods must be annotated with annotation @Test. For example:
    //
    // @Test
    // public void hello() {}

    @Test
    public void testTransform() throws TransformerConfigurationException, TransformerException, IOException {

        String xmlToBeTransformedFile = "test/dealmap/dealmap-deal-jack-oyster-albany-ny.xml";
        
        InputStream xmlToBeTransformedIS = IOUtils.getResourceAsStream(xmlToBeTransformedFile,TestXSLTDealMapDealToLPAMessage.class);
        if (xmlToBeTransformedIS == null ) {
            throw new IOException("InputStream null for:"+xmlToBeTransformedFile);
        }
        StreamSource xmlToBeTransformedSource = new StreamSource(xmlToBeTransformedIS);


        String xsltForTransform = "xsl/DealMapDealToLpaMessage.xsl";
        InputStream transformerIS = IOUtils.getResourceAsStream(xsltForTransform,TestXSLTDealMapDealToLPAMessage.class);
        StreamSource transformerSource = new StreamSource(transformerIS);

        TransformerFactory transFact = TransformerFactory.newInstance();
        Transformer trans = transFact.newTransformer(transformerSource);
        
        StringWriter writer = new StringWriter();
        Result output = new StreamResult(writer);
        trans.setParameter("campaignId", 657);
        trans.transform(xmlToBeTransformedSource, output);
        System.out.println("Result: \n" + writer);
        writer.close();
        //assertTrue(XMLUnit.compareXML(message.getPayloadAsString(), resultData).similar());

    }
}